# MONGODB_URI = mongodb+srv://neerajkumar001122opt:Nnee@j870342mongodb@cluster0.v7jhg.mongodb.net/mern_admin


MONGODB_URI = mongodb+srv://neeraj_mern:870342@cluster0.v7jhg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0


JWT_SECRET_KEY = WORLDBESTMERNSERIESBYTHAPATECHNICAL






# give me mongodb cluster linke way that where is password adn where is usernaem and what is there's whwere
# ChatGPT said:
# ChatGPT
# To connect to a MongoDB cluster, you typically get a connection string from MongoDB Atlas (or your own MongoDB setup), and it will look something like this:

# MongoDB Connection String Format:
# php
# Copy code
# mongodb+srv://<username>:<password>@cluster0.mongodb.net/<database>?retryWrites=true&w=majority
# Breakdown of Connection String:
# mongodb+srv:// – The protocol used to connect to the MongoDB server.
# <username> – Your MongoDB user’s username (created in the MongoDB Atlas cluster).
# <password> – The password for your MongoDB user.
# cluster0.mongodb.net – The domain where your MongoDB cluster is hosted (replace cluster0 with the actual cluster name you were given by MongoDB).
# <database> – The name of the database you want to connect to. You can replace this with the specific database you are using or leave it blank for the default.
# retryWrites=true&w=majority – Optional parameters for connection behavior (leave them as-is unless you have specific needs).
# Example Connection String:
# If your username is myUser and your password is myPassword123, and your database is named myDB, it would look like this:

# bash
# Copy code
# mongodb+srv://myUser:myPassword123@cluster0.mongodb.net/myDB?retryWrites=true&w=majority
# Steps to get the connection string:
# Go to MongoDB Atlas (or wherever your cluster is hosted).
# Create a MongoDB user if you haven't done so yet. You will define a username and password during this step.
# Get your Cluster connection string from the Atlas dashboard.
# Replace placeholders (<username>, <password>, <database>) with your actual credentials and database name.
# Important Note:
# Password encoding: If your password contains special characters (like @, /, etc.), you’ll need to URL-encode them. For example, replace @ with %40.
# Security: Never hard-code your username and password in the source code. Instead, use environment variables to store sensitive information.
# Example using Environment Variables in Node.js:
# Create a .env file:

# env
# Copy code
# MONGODB_URI=mongodb+srv://myUser:myPassword123@cluster0.mongodb.net/myDB?retryWrites=true&w=majority
# Access in your Node.js application:

# javascript
# Copy code
# const mongoose = require('mongoose');
# const dotenv = require('dotenv');

# dotenv.config();

# const dbUri = process.env.MONGODB_URI;

# mongoose.connect(dbUri, { useNewUrlParser: true, useUnifiedTopology: true })
#   .then(() => console.log("MongoDB connected"))
#   .catch(err => console.error("MongoDB connection error:", err));
# This way, your username and password are kept secure in environment variables instead of being exposed in the code.








